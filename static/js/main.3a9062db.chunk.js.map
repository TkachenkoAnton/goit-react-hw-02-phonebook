{"version":3,"sources":["components/Form.js","components/ContactList.js","components/SearchForm.js","App.js","index.js"],"names":["Form","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","onSubmit","props","id","shortid","generate","reset","this","formId","htmlFor","type","onChange","Component","ContactList","contacts","children","map","SearchForm","filter","App","getAndAddContact","newContact","passNewContact","pass","forEach","toLowerCase","alert","setFilterState","currentTarget","normalizeQuery","afterSearchContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QA8DeA,E,4MA1DbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAACC,GAAO,IAAD,EACIA,EAAEC,OAAlBJ,EADY,EACZA,KAAMK,EADM,EACNA,MAEd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAACJ,GACdA,EAAEK,iBADkB,MAGK,EAAKT,MAAtBC,EAHY,EAGZA,KAAMC,EAHM,EAGNA,QAIdQ,EAHqB,EAAKC,MAAlBD,UAGC,CAAEE,GAFOC,IAAQC,WAEAb,OAAMC,WAChC,EAAKa,S,EAGPA,MAAQ,WACN,EAAKR,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAGpC,WAAU,IAAD,EACkBc,KAAKhB,MAAtBC,EADD,EACCA,KAAMC,EADP,EACOA,OACRe,EAASJ,IAAQC,WAEvB,OACE,uBAAMJ,SAAUM,KAAKR,aAArB,UACE,wBAAOU,QAASD,EAAhB,UACE,sCACA,uBACEE,KAAK,OACLlB,KAAK,OACLW,GAAIK,EACJX,MAAOL,EACPmB,SAAUJ,KAAKb,kBAGnB,wBAAOe,QAASD,EAAhB,UACE,wCACA,uBACEE,KAAK,MACLlB,KAAK,SACLW,GAAIK,EACJX,MAAOJ,EACPkB,SAAUJ,KAAKb,kBAGnB,wBAAQgB,KAAK,SAAb,gC,GArDWE,aCmBJC,E,4JAnBb,WAAU,IAAD,EACwBN,KAAKL,MAA5BY,EADD,EACCA,SAAUC,EADX,EACWA,SAElB,OACE,qCACE,0CACA,mCAAGA,IACH,6BACGD,EAASE,KAAI,gBAAGb,EAAH,EAAGA,GAAIX,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,+BACGD,EADH,KACWC,IADFU,e,GAVKS,aCeXK,E,4JAdb,WAAU,IAAD,EACsBV,KAAKL,MAA1BgB,EADD,EACCA,OAAQP,EADT,EACSA,SAEhB,OACE,+BACE,kCACE,uDACA,uBAAOD,KAAK,OAAOb,MAAOqB,EAAQP,SAAUA,a,GAR7BC,aCwDVO,E,4MApDb5B,MAAQ,CACNuB,SAAU,GACVI,OAAQ,I,EAGVE,iBAAmB,SAACC,GACd,EAAKC,eAAeD,IACtB,EAAKvB,UAAS,YAAmB,IAAhBgB,EAAe,EAAfA,SACf,MAAO,CAAEA,SAAS,CAAEO,GAAH,mBAAkBP,S,EAKzCQ,eAAiB,SAACD,GAAgB,IACxBP,EAAa,EAAKvB,MAAlBuB,SACJS,GAAO,EASX,OAPAT,EAASU,SAAQ,YAAc,EAAXhC,KACTiC,gBAAkBJ,EAAW7B,KAAKiC,gBACzCC,MAAM,GAAD,OAAIL,EAAW7B,KAAf,sCACL+B,GAAO,MAIJA,G,EAGTI,eAAiB,SAAChC,GAAO,IACfE,EAAUF,EAAEiC,cAAZ/B,MAER,EAAKC,SAAS,CAAEoB,OAAQrB,K,4CAG1B,WAAU,IAAD,EACsBU,KAAKhB,MAA1BuB,EADD,EACCA,SAAUI,EADX,EACWA,OACZW,EAAiBX,EAAOO,cACxBK,EAAsBhB,EAASI,QAAO,qBAAG1B,KACxCiC,cAAcM,SAASF,MAG9B,OACE,qCACE,2CACA,cAAC,EAAD,CAAM5B,SAAUM,KAAKa,mBACrB,cAAC,EAAD,CAAaN,SAAUgB,EAAvB,SACE,cAAC,EAAD,CAAYZ,OAAQA,EAAQP,SAAUJ,KAAKoB,0B,GA9CnCf,aCDlBoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3a9062db.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    const { onSubmit } = this.props;\n    const contactId = shortid.generate();\n\n    onSubmit({ id: contactId, name, number });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const formId = shortid.generate();\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor={formId}>\n          <h3>Name</h3>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id={formId}\n            value={name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label htmlFor={formId}>\n          <h3>Number</h3>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            id={formId}\n            value={number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\n\nclass ContactList extends Component {\n  render() {\n    const { contacts, children } = this.props;\n\n    return (\n      <>\n        <h2>Contacts</h2>\n        <>{children}</>\n        <ul>\n          {contacts.map(({ id, name, number }) => (\n            <li key={id}>\n              {name}: {number}\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default ContactList;\n","import React, { Component } from \"react\";\n\nclass SearchForm extends Component {\n  render() {\n    const { filter, onChange } = this.props;\n\n    return (\n      <form>\n        <label>\n          <h3>Find contacts by name</h3>\n          <input type=\"text\" value={filter} onChange={onChange} />\n        </label>\n      </form>\n    );\n  }\n}\n\nexport default SearchForm;\n","import React, { Component } from \"react\";\nimport Form from \"./components/Form\";\nimport ContactList from \"./components/ContactList\";\nimport SearchForm from \"./components/SearchForm\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  getAndAddContact = (newContact) => {\n    if (this.passNewContact(newContact)) {\n      this.setState(({ contacts }) => {\n        return { contacts: [newContact, ...contacts] };\n      });\n    }\n  };\n\n  passNewContact = (newContact) => {\n    const { contacts } = this.state;\n    let pass = true;\n\n    contacts.forEach(({ name }) => {\n      if (name.toLowerCase() === newContact.name.toLowerCase()) {\n        alert(`${newContact.name} is already in your contacts list`);\n        pass = false;\n      }\n    });\n\n    return pass;\n  };\n\n  setFilterState = (e) => {\n    const { value } = e.currentTarget;\n\n    this.setState({ filter: value });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const normalizeQuery = filter.toLowerCase();\n    const afterSearchContacts = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizeQuery)\n    );\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.getAndAddContact} />\n        <ContactList contacts={afterSearchContacts}>\n          <SearchForm filter={filter} onChange={this.setFilterState} />\n        </ContactList>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}